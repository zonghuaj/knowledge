1.http://jsrun.net/new
  有什么不同的方式可以隐藏内容（使其仅适用于屏幕阅读器）？
  这些方法与可访问性（a11y）有关。

  visibility: hidden：元素仍然在页面流中，并占用空间。
  width: 0; height: 0：使元素不占用屏幕上的任何空间，导致不显示它。
  position: absolute; left: -99999px： 将它置于屏幕之外。
  text-indent: -9999px：这只适用于block元素中的文本。
  Metadata： 例如通过使用 Schema.org，RDF 和 JSON-LD。
  WAI-ARIA：如何增加网页可访问性的 W3C 技术规范
  
  
2.https://www.w3cschool.cn/fetch_api/fetch_api-atvq2nma.html(fetch api 官方文档)

3.https://davidwalsh.name/event-delegate（事件委托）

事件委托
js事件委托，其实是使用了冒泡的原理，从点击的元素开始，递归方式的向父元素传播事件，这样做的好处是对于大量要处理的元素，不必为每个元素都绑定事件，只需要在他们的父元素上绑定一次即可，提高性能。 还有一个好处就是可以处理动态插入dom中的元素，直接绑定的方式是不行的。
就是事件目标自身不处理事件，而是把处理任务委托给其父元素或者祖先元素，甚至根元素事件委托很好地利用了"事件冒泡"。当点击子元素，根据"事件冒泡"，该子元素的父级元素捕获了该次点击事件，并触发自己的方法。
看实例：
假如现在有10个按钮，要为每个按钮绑定一个click事件，可能才十个按钮，你可以一个一个的绑定或用循环进行绑定，但是这样性能呢？
html:
复制代码
<div class="button-group">
        <bottoun type="button" class="btn">提交</bottoun>
        <bottoun type="button" class="btn">提交</bottoun>
        <bottoun type="button" class="btn">提交</bottoun>
        <bottoun type="button" class="btn">提交</bottoun>
        <bottoun type="button" class="btn">提交</bottoun>
        <bottoun type="button" class="btn">提交</bottoun>
        <bottoun type="button" class="btn">提交</bottoun>
        <bottoun type="button" class="btn">提交</bottoun>
        <bottoun type="button" class="btn">提交</bottoun>
        <bottoun type="button" class="btn">提交</bottoun>
    </div>
复制代码
js:

$(".button-group").on('click','.btn',function(){
      alert($(this).html());
});
这里可以看出，我们只是为所有的button的一个父级绑定了click事件，而不是为所有的button绑定事件，极大的提高了性能，这样做的好处还有可以对动态加进来的元素进行处理

就是有一个按钮原本的dom里面是没有的，是你通过其他方式添加进来的，即未来元素，用直接绑定方法是不能成功的，只能用事件委托，委托给该元素的父级进行处理

由于事件委托是通过事件冒泡实现的，所以如果子级的元素阻止了事件冒泡，那么事件委托也将失效


5.https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures(闭包)
由于事件委托是通过事件冒泡实现的，所以如果子级的元素阻止了事件冒泡，那么事件委托也将失效包
由于事件委托是通过事件冒泡实现的，所以如果子级的元素阻止了事件冒泡，那么事件委托也将失效

6.https://www.freecodecamp.one/ (在线学习课程)


7.https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-shadow

8.https://www.w3cschool.cn/angularjs/(angular js w3c school)
